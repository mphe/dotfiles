priority 0

snippet cdhere "cd in this file's directory"
cd "$(dirname "$(readlink -f "\$0")")" || exit 1

endsnippet

snippet help "Skeleton for script documentation"
if [ \$# -eq 0 ] || [ "\$1" == "-h" ] || [ "\$1" == "--help" ]; then
	echo "${1:docstring}"
	echo -e "Usage:\n\t\$\{0##*/\} [options] ${2:arguments}"
	echo -e "\nOptions:"
	echo -e "\t-h, --help\tShow help"
	exit
fi
endsnippet

snippet yesno "Question? [y/N] prompt"
question() {
	local ANS
	until [[ $ANS =~ ^[YyNn]$ ]]; do
		read -p "\$1?  [y/N] " -n 1 -r ANS
		echo
	done
	[[ $ANS =~ ^[Yy]$ ]] && return 0 || return 1
}

endsnippet

snippet trap_cleanup "trap exit"
trap cleanup 0               # EXIT
trap "cleanup; exit 1" 2     # INT
trap "cleanup; exit 1" 1 15  # HUP TERM

cleanup() {
	:
}
endsnippet

snippet shellcheck_ignore
shellcheck disable=$1
endsnippet

snippet main "main function" b
main() {
	${1:${VISUAL::}}
}

main "$@"
endsnippet

snippet parse_args "parse arguments"
while [[ \$# -gt 0 ]]; do
	case "\$1" in
		-h|--help )
			echo "help"
			exit
			;;
		--flag )
			FLAG=true
			;;
		* )
			POSITIONAL="\$1"
			;;
	esac
	shift
done
endsnippet
